snippet /       单行注释
	{# ${1} #}
snippet //      多行注释
	{# ${1}#}
snippet <       {% ... %}
	{% ${1} %}
snippet .       {{ ... }}
	{{ ${1} }}
# 代码复用
snippet im      导入并起别名
	{% import '${1}' as ${2} %}
snippet fim     从指定文件导入
	{% from '${1}' import ${2} as ${3} %}
snippet in      包含模板
	{% include '${1}' %}
snippet ex      扩展模板
	{% extends '${1}' %}
snippet em      包含模板并扩展模板的内容
	{% embed '${1}' %}${2}{% endembed %}
snippet us      包含模板，近似于多重继承
	{% use '${1}' %}
snippet re      载入片段
	{% render(${1}) %}
snippet ma      宏
	{% macro ${1} %}${2}{% endmacro %}
snippet bb      单行代码块
	{% block ${1} %}
snippet bl      多行代码块
	{% block ${1} %}${2}{% endblock %}
snippet ss      单行变量设置
	{% set ${1} %}
snippet se      多行变量设置
	{% set ${1} %}${2}{% endset %}
# 其他控制结构
snippet fl      刷新输出缓冲
	{% flush %}${1}
snippet do      执行表达式
	{% do ${1} %}
snippet au      将字符串安全地处理成合法的指定数据
	{% autoescape${1} %}${2}{% endautoescape %}
snippet sp      去除HTML片段中的空格
	{% spaceless %}${1}{% endspaceless %}
snippet ve      阻止模板引擎的编译
	{% verbatim %}${1}{% endverbatim %}
snippet fi      多行过滤器
	{% filter ${1} %}${2}{% endfilter %}
# 流程控制
snippet if      if
	{% if ${1} %}${2}{% endif %}
snippet elif    elseif
	{% elseif ${1} %}
snippet el      else
	{% else %}${1}
snippet fo      for .. in
	{% for ${1} in ${2} %}${3}{% endfor %}
# 内建函数
snippet pa      引用父片段
	parent()${1}
snippet ass     加载静态资源文件
	asset('${1}')
snippet att     获取变量值 [用于带连接符的属性名，如 my-name]
	attribute(${1})
snippet blo     重用代码块
	block('${1}')
snippet con     从字符串或对象的常量生成一个常量
	constant('${1}')
snippet cyc     循环一个数组
	cycle(${1})
# 全局变量
snippet _s      当前模板的引用
	_self${1}
snippet _t      当前上下文的引用
	_context${1}
snippet _c      当前字符集设置的引用
	_charset${1}
